// export default {
//   route: {
//     user: 'USER',
//     userList: 'Users',
//     userInfo: 'UserInfo',
//     userResetPwd: 'UserResetPwd',
//     userChangePwd: 'UserChangePwd',
//     userChangeAvatar: 'UserChangeAvatar',
//     roleList: 'Roles',
//     urlList: 'Urls',
//     modellog: 'Modellogs',
//     logSentryList: 'UserOpsLogs',
//     stree: 'SERVICETREE',
//     streeList: 'STree',
//     cmdb: 'CMDB',
//     mdb: 'MDB',
//     dbList: 'DataBases',
//     dbClusterList: 'DbClusters',
//     dbinstancesList: 'DbInstances',
//     sqlOptimize: 'SqlOptimize',
//     sqlQuery: 'SqlQuery',
//     sqlJob: 'SqlJob',
//     queryPerm: 'QueryPerm',
//     inception: 'Inception',
//     dbuserList: 'DBUser',
//     idcList: 'Idcs',
//     hostList: 'Hosts',
//     networkDeviceList: 'NetWorkDevices',
//
//     workflow: 'WORKFLOW',
//     workflowIndex: 'WorkFlows',
//     workflowList: 'WorkFlows',
//     workorderList: 'WorkOrders',
//     workflowgroupList: 'WorkFlowGroups',
//     formfieldsList: 'Formfields',
//     auditStepsList: 'AuditSteps',
//     workordernew: 'WorkOrderNew',
//     woswaitingList: 'WorkOrdesWaits',
//     wosuperviseList: 'WorkOrderSupervises',
//     wohistoryList: 'WorkOrderHistory',
//
//     cicd: 'CICD',
//     modList: 'Mods',
//     pub: 'PubCode',
//     pubdev: 'PubDev',
//     pubprod: 'PubProd',
//     pubtest: 'PubTest',
//     jobList: 'Jobs',
//     jobRuleList: 'jobRules',
//     jobLog: 'JobLogs',
//     mlog: 'ServiceLog',
//     eslogTail: 'EsServiceLog',
//
//     logType: 'LogType',
//     logConf: 'LogConf',
//
//     mcloud: 'Mcloud',
//     publicconfList: 'PubConfs',
//     aliyun_hostList: 'AliHosts',
//     aliyun_redisList: 'AliRedis',
//     tencent_hostList:'TxHosts',
//     publicregionList:'pubRegions',
//
//     mk8s:'K8S',
//     harborproject:'HarborProject',
//
//     dashboard: 'DASHBOARD',
//     introduction: 'Introduction',
//     documentation: 'Documentation',
//     guide: 'Guide',
//     permission: 'Permission',
//     pagePermission: 'Page Permission',
//     directivePermission: 'Directive Permission',
//     icons: 'Icons',
//     components: 'Components',
//     componentIndex: 'Introduction',
//     tinymce: 'Tinymce',
//     markdown: 'Markdown',
//     jsonEditor: 'JSON Editor',
//     dndList: 'Dnd List',
//     splitPane: 'SplitPane',
//     avatarUpload: 'Avatar Upload',
//     dropzone: 'Dropzone',
//     sticky: 'Sticky',
//     countTo: 'CountTo',
//     componentMixin: 'Mixin',
//     backToTop: 'BackToTop',
//     dragDialog: 'Drag Dialog',
//     dragSelect: 'Drag Select',
//     dragKanban: 'Drag Kanban',
//     charts: 'Charts',
//     keyboardChart: 'Keyboard Chart',
//     lineChart: 'Line Chart',
//     mixChart: 'Mix Chart',
//     example: 'Example',
//     Table: 'Table',
//     dynamicTable: 'Dynamic Table',
//     dragTable: 'Drag Table',
//     inlineEditTable: 'Inline Edit',
//     complexTable: 'Complex Table',
//     treeTable: 'Tree Table',
//     customTreeTable: 'Custom TreeTable',
//     tab: 'Tab',
//     form: 'Form',
//     createArticle: 'Create Article',
//     editArticle: 'Edit Article',
//     articleList: 'Article List',
//     errorPages: 'Error Pages',
//     page401: '401',
//     page404: '404',
//     errorLog: 'Error Log',
//     excel: 'Excel',
//     exportExcel: 'Export Excel',
//     selectExcel: 'Export Selected',
//     uploadExcel: 'Upload Excel',
//     zip: 'Zip',
//     exportZip: 'Export Zip',
//     theme: 'Theme',
//     clipboardDemo: 'Clipboard',
//     i18n: 'I18n',
//     externalLink: 'External Link',
//   },
//   common: {
//     changeavatar: 'Change Avatar',
//   },
//   navbar: {
//     logOut: 'Log Out',
//     resetPwd: 'reset Pwd',
//     changePwd: 'Change Password',
//     userinfo: 'use Info',
//     dashboard: 'Dashboard',
//     github: 'Github',
//     screenfull: 'Screenfull',
//     theme: 'Theme',
//     size: 'Global Size',
//     help: 'Help Documentation'
//   },
//
//   guide: {
//     description: 'The guide page is useful for some people who entered the project for the first time. You can briefly introduce the features of the project. Demo is based on ',
//     button: 'Show Guide'
//   },
//   components: {
//     documentation: 'Documentation',
//     tinymceTips: 'Rich text editor is a core part of management system, but at the same time is a place with lots of problems. In the process of selecting rich texts, I also walked a lot of detours. The common rich text editors in the market are basically used, and the finally chose Tinymce. See documentation for more detailed rich text editor comparisons and introductions.',
//     dropzoneTips: 'Because my business has special needs, and has to upload images to qiniu, so instead of a third party, I chose encapsulate it by myself. It is very simple, you can see the detail code in @/components/Dropzone.',
//     stickyTips: 'when the page is scrolled to the preset position will be sticky on the top.',
//     backToTopTips1: 'When the page is scrolled to the specified position, the Back to Top button appears in the lower right corner',
//     backToTopTips2: 'You can customize the style of the button, show / hide, height of appearance, height of the return. If you need a text prompt, you can use element-ui el-tooltip elements externally',
//     imageUploadTips: 'Since I was using only the vue@1 version, and it is not compatible with mockjs at the moment, I modified it myself, and if you are going to use it, it is better to use official version.'
//   },
//   notice: {
//     delete: 'Delete cannot be restored. Are you sure to delete？',
//     createsuccess: 'Create Success！',
//     updatesuccess: 'Update Success!',
//     syncsuccess:'Sync Success！',
//     delsuccess: 'Delete Success!',
//     linksuccess: 'Link Success！',
//     linkfail: 'Link Fail！',
//
//     lastNodeName: 'The last Node name must end with -prod or -test or -dev or -pre!',
//     hostempty: 'Hosts is Empty!'
//
//   },
//   table: {
//     dynamicTips1: 'Fixed header, sorted by header order',
//     dynamicTips2: 'Not fixed header, sorted by click order',
//     dragTips1: 'The default order',
//     dragTips2: 'The after dragging order',
//     title: 'Title',
//     importance: 'Imp',
//     type: 'Type',
//     remark: 'Remark',
//     search: 'Search',
//     add: 'Add',
//     export: 'Export',
//     exportall: 'ExportAll',
//     upload: 'Upload',
//     reviewer: 'reviewer',
//     review: 'Review',
//     nextreviewer: 'NextReviewer',
//     reviewRemark: 'ReviewRemark',
//     id: 'ID',
//     date: 'Date',
//     author: 'Author',
//     readings: 'Readings',
//     status: 'Status',
//     actions: 'Actions',
//     edit: 'Edit',
//     publish: 'Publish',
//     draft: 'Draft',
//     delete: 'Delete',
//     cancel: 'Cancel',
//     confirm: 'Confirm',
//     name: 'Name',
//     zh_name: 'Zh_name',
//     cname: 'Cname',
//     phone: 'Phone',
//     create_time: 'CreateTime',
//     update_time: 'UpdateTime',
//     remark: 'Remark',
//     email: 'Email',
//     username: 'Username',
//     description: 'Description',
//     showadvance: 'AdvanceSearch',
//     save: 'Save',
//     is_active: 'IsActive',
//     role: 'Role',
//     copy: 'Copy',
//     detail: "Detail",
//     env: 'Env',
//     goback: 'GoBack',
//     password: 'Password',
//     privileges: 'Privileges',
//     table: 'Table',
//     getpwd: 'GetPwd',
//     perm: 'Perm',
//     perm_type: 'PermType',
//     stree_id:'StreeId',
//     sync:'Sync',
//     per:'Per',
//   },
//
//   login: {
//     title: 'Login',
//     getsmscode: ' Get Sms Code ',
//     loginpwdtitle: 'PasswordLogin',
//     loginphonetitle: 'PhoneLogin',
//     logIn: 'Log in',
//     username: 'Username',
//     password: 'Password',
//     phone: 'phone',
//     any: 'any',
//     register: 'Register',
//     thirdparty: 'Thirdparty',
//     resetPwd: 'Reset Password',
//     thirdparty: 'Or connect with',
//     thirdpartyTips: 'Tip: After binding thirdparty to the user center, you can use the third party login.'
//   },
//   register: {
//     title: 'register',
//     regisTer: 'regisidcListter',
//     username: 'username',
//     password: 'password',
//     email: 'email',
//     smscode: 'smscode',
//     phone: 'phone'
//   },
//   resetpwd: {
//     title: 'Reset Password',
//     password: 'Password',
//     confirmPassword: 'confirm Password',
//     resetpwd: 'Reset Pwd',
//   },
//   documentation: {
//     documentation: 'Documentation',
//     github: 'Github Repository'
//   },
//   permission: {
//     roles: 'Your roles',
//     switchRoles: 'Switch roles'
//   },
//
//   userconf: {
//     isvoice: 'Voice',
//     issms: 'Sms',
//     isemail: 'Email',
//   },
//   userrole: {
//     expired_time: 'expiredTime',
//   },
//   role: {
//     name: 'roleName',
//     detail: 'roleDetail',
//     users: 'userList',
//   },
//
//   idc: {
//     name: 'Name',
//     cname: 'Cname',
//     remark: 'Remark',
//     address: 'Address',
//     contact: 'Contact',
//     phone: 'Phone',
//     cabinet: 'Cabinet',
//     bandwidth: 'Bandwidth',
//     network: 'Network',
//     operator: 'Operator'
//   },
//   networkdevice: {
//     hostname: "hostname",
//     device_type: "deviceType",
//     model: "model",
//     cabinet: "cabinet",
//     position: "position",
//     sn: "sn",
//     use_status: "useStatus",
//     manage_ip: "manageIp",
//     asset_no: "assetNo",
//     vendor: "vendor",
//     up_time: "upTime",
//     expired_time: "expiredTime",
//     remark: "remark",
//     idc: "idc"
//   },
//   host: {
//     hostname: 'Hostname',
//     ip: 'Ip',
//     host_type: 'HostType',
//     cabinet: 'Cabinet',
//     position: 'Position',
//     up_time: 'UpTime',
//     expired_time: 'ExpiredTime',
//     asset_no: 'AssetNo',
//     vendor: 'Vendor',
//     use_status: 'UseStatus',
//     public_ip: 'PublicIp',
//     manage_ip: 'ManageIp',
//     other_ip: 'otherIp',
//     port: 'Port',
//     model: 'Model',
//     sn: 'SN',
//     os: 'OS',
//     cpu: 'Cpu',
//     memory: 'Memory',
//     disk: 'Disk',
//     cpu_memory_disk: 'Cpu/Memory/Disk',
//     baseinfo: 'Load/CPU/MEM/IO',
//     run_status: 'runStatus',
//     salt_status: 'saltStatus',
//     remark: 'Remark',
//     idc: 'Idc',
//     trees: 'Trees'
//   },
//
//   stree: {
//     trees: 'Add Host',
//     adddbs: 'Add DB',
//     pub_code: 'PubCode',
//     showperform: 'ShowPerform',
//     wiki: 'Wiki',
//     prod_domain: "ProdDomain",
//     test_domain: "TestDomain",
//     dev_domain: "DevDomain",
//     git: 'GitAddr',
//     code_type: 'CodeType',
//     description: 'Detail',
//     archaddr: 'ArchDddr',
//
//     treenode_filter: 'Tree Node Filter',
//     mount_host: 'Mount Hosts',
//     mounted_host: 'Mounted Hosts',
//     mountable_host: 'Mountable Hosts',
//     project_detail: 'Project Detail',
//     demand:'Demand',
//     mount_db: 'Associated DBs',
//     charge_person: 'Charge Persons',
//     rolelist: 'Role List',
//     roleop: 'Has permission to view, create, and edit tree nodes',
//     roleop_admin: 'It has access to view, create, edit and drag tree nodes, as well as to approve OP.',
//     rolerd: 'Have view tree node privileges',
//     rolerd_admin: 'Has the view tree node privilege, at the same time has the approval RD privilege',
//     node_name: 'Node names must be alphabetic numbers and alphabet-combinations! And it can\'t be named host-pool',
//     node_no_del: 'the node no delete!',
//     toolbox:'ToolBox',
//   },
//   mdb: {
//     env: 'env',
//     showconf: 'showConf',
//     showprocesslist: 'showProcesslist',
//     showdbs: 'showDBs',
//     showmonitor: 'showMonitor',
//     showhostmonitor: 'showHostMonitor',
//     createdb: 'CreateDB',
//     createuser: 'GrantUser',
//     sqlconsole: 'SQL Console',
//     sqlresult: 'Results',
//     tablenotice: 'Show Table Structure',
//     querysqlhistory: 'QuerySqlHistory',
//     table: 'Table',
//     tablename: 'TableName',
//     currdbnotice: 'Current Database:',
//     syntaxok: 'Grammar check pass ',
//     inceconsole: 'InceptionConsole',
//     inceparams: 'InceptionParams',
//   },
//
//   mdb_dbinstance: {
//     env: 'Env',
//     type: 'Type',
//     host: 'IP',
//     port: 'Port',
//     user: 'User',
//     passwd: 'Password',
//     check_conn: 'CheckConn',
//     name: 'Name',
//     cname: 'Cname',
//     dbcluster: 'DbCluster',
//     slave_type: 'SlaveType',
//     syncslave: 'SynSlave',
//   },
//   mdb_dbcluster: {
//     env: 'Env',
//     dbinstances: 'DBinstances',
//     dbs: 'DBs'
//   },
//   mdb_db: {
//     name: 'Name',
//     cname: 'Cname',
//     charset: 'Character',
//     dbinstance: 'Instance',
//     dbcluster_name: 'DbCluster',
//     read_host: 'ReadHost',
//     write_host: 'WriteHost',
//     notice_create: 'Notice:\n' +
//     '          When selecting the database:\n' +
//     '          1. If you choose the following existing database names, in order to \n' +
//     '            import the existing database into the system,\n' +
//     '          2. If the name of the database is not entered, the main \n' +
//     '             instance will be operated to create a new database for the new database.'
//   },
//
//
//   mdb_sqladvisor: {
//     sql: 'SQL',
//     database: 'database',
//     table: 'table',
//     type: 'AdvisorType',
//     advisor: 'SQLAdvisor',
//     syntax: 'SQLSyntax',
//     format: 'SQLFormat',
//     clear: 'ClearSQL',
//     query: 'SQLQuery',
//     limit: "LimitNum",
//   },
//   mdb_sqlquery: {
//     sql: 'SQL',
//     limit: 'LimitNum',
//     effect_row: 'EffectRow',
//     query_cost_time: 'QueryCostTime',
//     masking_cost_time: 'MaskingCostTime',
//     cost_time: 'CostTime',
//     creator: 'Creator',
//     db: 'Database',
//   },
//
//
//   mdb_sqljob: {
//     taskid: 'TaskId',
//     db: 'Db',
//     sql: 'SQL',
//     sql_type: 'SqlType',
//     creator: 'Creator',
//     status: 'Status',
//     errormessage: 'ErrorMsg',
//     affectedrows: 'AffectedRows',
//     executetime: 'ExecTime',
//     executecosttime: 'ExecCostTime',
//     executeresult: 'ExecResult',
//     rollbackable: 'Rollbackable',
//     rollbacktime: 'RollbackTime',
//     rollbackcosttime: 'RollbackCostTime',
//     rollbackresult: 'RollbackResult',
//     rollback: "Rollback",
//     rollbacksql: 'RollBackSQL',
//     execresult: 'ExecResults',
//     checkSyntax: 'CheckSyntax',
//     sqlgrammar: 'SqlGrammar',
//     order_id:'OrderId'
//   },
//
//   mdb_inceptionconf: {
//     param: "Param",
//     default: "Default",
//     value: "Value",
//     description: "Description",
//     host: 'Host',
//     port: 'Port',
//     username: 'UserName'
//   },
//
//
//   mdb_querypermissions: {
//     username: "Username",
//     perm_type: "PermType",
//     tables: "Tables",
//     expired_time: "ExpiredTime",
//     db: 'DB',
//   },
//
//   mdb_dbuser: {
//     grant: 'Grant',
//     privileges: 'privileges',
//     table: 'tables',
//     ip: 'IP/IPs',
//   },
//
//   workflow: {
//     steps: "ApprovalSteps",
//     is_active: "IsActive",
//     group_cname: "GroupCname",
//     name: "WorkflowName",
//     approvers: 'Approvers',
//     addfields: 'Fields',
//     addauditflow: 'AppFlow',
//     type: 'Type',
//     addgroup: 'AddGroup',
//      automation:'auto',
//     manual:'manual'
//   },
//   workorder: {
//     flow: "flow",
//     data: "data",
//     status: "status",
//     exec_status: "Executestatus",
//     exec_log: "ExecuteLog",
//     workflow: "workflow",
//     creator: "creator",
//     cur_user_role: "CurrUser/Role",
//
//     title: 'title',
//     contact: 'contact',
//     audit_user: 'approvalUser',
//     feedback: 'Feedback',
//     hotwo:'Hot WorkOrder',
//     wotype:'WorkOrder Classification',
//     mine:'Mine WorkOrder',
//   },
//
//   workflow_formfields: {
//     type: "Type",
//     field: "Field",
//     value: "Value",
//     props: "PropsRules",
//     validate_select: 'validateSelect',
//     validate: "ValidateRules",
//     validate_message: "ValidateMessage",
//     validate_required: 'ValidateRequired',
//     dicurl: 'Dicurl',
//     options: "Options",
//     order_num: "orderNum",
//     workflow: "WorkFlow",
//     script: 'Script',
//     demo: "ReferDemo",
//     title:'Title',
//   },
//   workflow_audit: {
//     role_type: "RoleType",
//   },
//   cicd: {
//     mod: 'ModName',
//     action: 'Action',
//     hostList: 'HostList',
//     gittag: 'Git branch/tag',
//     //2
//     tag: 'tag/branch',
//     ip: 'ip',
//     version: 'version',
//     pubtime: 'pubtime',
//
//     pubdesc: 'pubdesc',
//     pubstatus: 'pubstatus',
//     pubisher: 'pubisher',
//     comment: 'comment',
//     ctag: 'buildTag',
//     repub: 'RePub',
//     checklog: 'CheckLog',
//     refreshlog: 'RefreshLog'
//   },
//   cicd_mod: {
//     mod_type: "ModType",
//     deploy_dir: "DeployDir",
//     deploy_sec_dir: "DeploySecDir",
//     tomcat_version: "TomcatVersion",
//     server_port_prod: "Port",
//     compile: "Compile",
//     jdk_version: "jdkVersion",
//     health_check_file: "HealthCheckFile",
//     changeparams: "ChangeTmpParams",
//   },
//
//   log:{
//     search:'Search',
//     service:'Service',
//     server:'Server',
//     timerange:'Timerange',
//     linenum:'Linenum',
//     cmd:'type',
//     stop:'Stop',
//     syntax:'QueryStringSyntax',
//     fields:'ShowFields',
//   },
//
//
//     mcloud_hosts: {
//     name: 'instanceName',
//     os: 'OS',
//     ip: 'IP',
//     conf: 'Conf',
//     chargetype: 'chargetype',
//     status: 'status',
//     region: 'region',
//     startup: 'startup',
//     shutdown: 'shutdown',
//     reboot: 'reboot',
//     shutdownf: 'shutdownforce',
//     update: 'update',
//     copy: 'copy',
//     destroy: 'destroy',
//     region_id: "regionId",
//     zone_id: "zoneId",
//     hostname: "hostname",
//     image_id: "imageId",
//     system_disk_size: "systemDiskZize(G)",
//     data_disk_size: "dataDiskSize(G)",
//     data_disk_category: "dataDiskCategory",
//     instance_charge_type: "instanceChargeType",
//     instance_type: "instanceType",
//     security_group_id: "securityGroupId",
//     vpc_id: "vpcId",
//     vswitch_id: "vswitchId",
//     run_status: 'runStatus',
//     idc_name: 'idcName',
//     instancetype: 'instanceType',
//     model: 'model',
//     zone_name: 'zone_name',
//     subnets: 'subnets',
//
//     res_status: 'resStatus',
//     net_wr: 'networkWR',
//     mem_per: 'memPer',
//     cpu_per: 'cpuPer',
//     cluster: 'cluster',
//     asset_no: 'assetNo',
//     host_hostname: 'hostHostname',
//   },
//   mcloud_redis: {
//     name: 'name',
//     region: 'region',
//     version: 'version',
//     instance_class: 'instance_class',
//     chargetype: 'chargetype',
//     network: 'network',
//     QPS: 'QPS',
//     max_conn: 'max_conn',
//     mem_per: 'mem_per',
//     port:'port',
//     ConnectionDomain:'ConnectionDomain',
//     Connections:'Connections',
//   },
//
//   mk8s_harbor:{
//     name:'projectName',
//     public:'AccessLevel',
//     repo_count:'RepoCount',
//   },
//
//   socialTable: {
//     provider: 'Provider',
//     bindtime: 'BindTime',
//     details: 'Details',
//     unbind: 'Unbind',
//   },
//   errorLog: {
//     tips: 'Please click the bug icon in the upper right corner',
//     description: 'Now the management system are basically the form of the spa, it enhances the user experience, but it also increases the possibility of page problems, a small negligence may lead to the entire page deadlock. Fortunately Vue provides a way to catch handling exceptions, where you can handle errors or report exceptions.',
//     documentation: 'Document introduction'
//   },
//   excel: {
//     export: 'Export',
//     selectedExport: 'Export Selected Items',
//     placeholder: 'Please enter the file name(default excel-list)'
//   },
//   zip: {
//     export: 'Export',
//     placeholder: 'Please enter the file name(default file)'
//   },
//   theme: {
//     change: 'Change Theme',
//     documentation: 'Theme documentation',
//     tips: 'Tips: It is different from the theme-pick on the navbar is two different skinning methods, each with different application scenarios. Refer to the documentation for details.'
//   },
//   tagsView: {
//     refresh: 'Refresh',
//     close: 'Close',
//     closeOthers: 'Close Others',
//     closeAll: 'Close All'
//   },
//   tableUser: {
//     cname: 'Cname',
//     date_joined: 'Date_joined',
//   },
//   dialog: {
//     create: 'Create',
//     update: 'Update',
//     delete: 'Delete',
//     detail: 'Detail',
//   },
// }
//
